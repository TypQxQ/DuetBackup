# Equivalent to T-1
[gcode_macro TOOL_DROPOFF]
gcode:
  SET_GCODE_VARIABLE MACRO=LOCK_INIT VARIABLE=tool_next VALUE=-1
  TOOL_DROPOFF_001

#Dropoff loaded tool at parking checks before actually moving.
[gcode_macro TOOL_DROPOFF_001]
gcode:
  # If X,Y or Z are not homed raise an error.
  {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
     { action_raise_error("TOOL_DROPOFF: X, Y and Z are not homed.") }
  {% endif %}


  {% set tool_current = printer["gcode_macro LOCK_INIT"].tool_current|int %}
  {% set tool_next = printer["gcode_macro LOCK_INIT"].tool_next|int %}


  {% if tool_current == -1  %}
    M117 "No tool mounted, no tool to unmount"
  {% elif tool_current == -2  %}
    { action_raise_error("TOOL_DROPOFF: Unknown tool mounted") }
  {% elif tool_current >= 0 and tool_current <= 8 %}                # First 9 tools (0-8) are connected to T0 and then the ERCF.
    {% if tool_next >=0 and tool_next <=8 %}                        # If next tool is one on the same real tool but on the ERCF
      M117 Call ERCF                                                # Call ERCF with the tool to be mounted
    {% else %}
      TOOL_DROPOFF_002 T=0                                          # If next tool not an ERCF tool then Park T0.
    {% endif %}
  {% elif tool_current >=9  %}                                      # Asume all tools from 9 are actual tools.
    TOOL_DROPOFF_002 T={tool_current}
  {% endif %}

# Drop off tool without any checks. Should be called by TOOL_DROPOFF_001.
[gcode_macro TOOL_DROPOFF_002]
gcode:
  {% set tool_current = params.T %}
  M117 Will drop off at X{printer["gcode_macro T"~tool_current].park_x} Y{printer["gcode_macro T"~tool_current].park_y}

    # Set XY offset to 0 so we park the tool right.
  SET_GCODE_OFFSET X=0 Y=0

  SAVE_GCODE_STATE NAME=TOOL_DROPOFF_002
  G90

        # If the tool has an extruder then put the tool in standby.
  {% if printer["gcode_macro T"~tool_current].extruder !="none" %}
    M568 P{tool_current} A1
  {% endif %}

      # If current tool has a fan then save the speed of that fan and then shut it down.
  {% if printer["gcode_macro T"~tool_current].fan !="none" %}
    SET_GCODE_VARIABLE MACRO=LOCK_INIT VARIABLE=saved_fan_speed VALUE={printer["fan_generic "~printer["gcode_macro T"~tool_current].fan].speed}
#printer["gcode_macro T"~tool_current].fan} #printer.fan.speed}
    SET_FAN_SPEED FAN={printer["gcode_macro T"~tool_current].fan} SPEED=0
  {% endif %}

  SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=maxx VALUE=0 # Don't use the X max as EmergencyStop.

  # Fast Move to the general pickup position for tools.
  {% if printer.toolhead.position.x|int < 500 %}
    G0 X500 Y{printer["gcode_macro T"~tool_current].zone_y} F40000   # Move near pickup and lift z so we don't crash the bed later.
  {% else %}
    G0 X500 F40000                                                   # Move X and lift z so we don't crash the bed or into other tools.
    G0 Y{printer["gcode_macro T"~tool_current].zone_y} F40000        # Move Y after X and Z
  {% endif %}
  M400                                                               # Wait for current moves to finish

  #M98 P"/sys/custom/EndStop_X-Max_Deactivate.g"	; Don't use the X max as EmergencyStop.

  G0 X{printer["gcode_macro T"~tool_current].zone_x} F40000          # Fast Move to the dropoff position for tool.
  G0 X{printer["gcode_macro T"~tool_current].park_x} F6000           # Slow Move to the dropoff position for tool.

  M400                                                               # Wait for current moves to finish
  TOOL_UNLOCK                                                        # Unlock the tool

  G0 X{printer["gcode_macro T"~tool_current].zone_x} F6000           # Slow Move to the pickup position for tool.
  G0 X500 F40000                                                     # Fast Move to the general pickup position for tools.
  M400

  SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=maxx VALUE=1 # Use the X max as EmergencyStop.

  # No need to set tool_current variable as it is set to -1 in TOOL_UNLOCK

  RESTORE_GCODE_STATE NAME=TOOL_DROPOFF_002                          # Restore Gcode state
