# Equivalent to T-1
[gcode_macro TOOL_DROPOFF]
gcode:
  { action_respond_info("TOOL_DROPOFF running. "~rawparams) }

  # If X,Y or Z are not homed raise an error.
  {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
     { action_raise_error("TOOL_DROPOFF: X, Y and Z are not homed.") }
  {% endif %}
#  SET_GCODE_VARIABLE MACRO=LOCK_INIT VARIABLE=tool_next VALUE=-1



  TOOL_DROPOFF_001

#Dropoff loaded tool at parking checks before actually moving.
[gcode_macro TOOL_DROPOFF_001]
gcode:
  {% set tv = printer["gcode_macro LOCK_INIT"].tool_current|int %}  # Virtual Tool. 
  # Set tool_current_id to the physical tool when/if using virtual tools, defaults to tv. If this is a virtual tool with another physical tool this will point to the parent physical tool.
  {% set tool_current_id = printer["gcode_macro T"~tv].ercf_physical_tool|default(tv)|int %}
  {% set tc =  printer["gcode_macro T"~tool_current_id] %}

  {% if tool_current_id == -1  %}
    RESPOND MSG="No tool mounted, no tool to unmount"
  {% elif tool_current_id == -2  %}
    { action_raise_error("TOOL_DROPOFF: Unknown tool mounted") }
  {% elif tc.type|default(1)|int == 1 %} # If the tool to be parked is a physical tool without ERCF
    TOOL_DROPOFF_002                     # Park current tool.
  {% elif tc.type|int == 2 %} # If the current tool is a ERCF tool
    TOOL_DROPOFF_002                     # Park current tool.
    RESPOND MSG="ERCF not implemented yet. Should unload ERCF here after parking tool. Tool {tool_current_id} and ERCF {tv} ."
  {% endif %}

# Drop off tool without any checks. Should be called by TOOL_DROPOFF_001.
[gcode_macro TOOL_DROPOFF_002]
gcode:
  {% set tv = printer["gcode_macro LOCK_INIT"].tool_current|int %}  # Virtual Tool. 
  # Set tool_current_id to the physical tool when/if using virtual tools, defaults to tv. If this is a virtual tool with another physical tool this will point to the parent physical tool.
  {% set tool_current_id = printer["gcode_macro T"~tv].ercf_physical_tool|default(tv)|int %}
  {% set tc =  printer["gcode_macro T"~tool_current_id] %}
  {% set safe_x = printer["gcode_macro LOCK_INIT"].safe_x|int %}

  { action_respond_info("TOOL_DROPOFF. tv="~tv~", tool_current_id="~tool_current_id) }

  RESPOND MSG="Will drop off tool at X{tc.park_x} Y{tc.park_y}"
    
  SET_GCODE_OFFSET X=0 Y=0            # Set XY offset to 0 so we park the tool right.

  SAVE_GCODE_STATE NAME=TOOL_DROPOFF_002
  G90

  # If the tool has an extruder then put the tool in standby.
  {% if tc.extruder|default("none")|lower !="none" %}
    M568 P{tv} A1        # Put tool heater in standby

    # Retract filament out of the meltzone
    {% if printer[tc.extruder].can_extrude|default("false")|lower == 'true' %}
      G1 E-4 F2700                    # retract filament from meltzone
      G1 E2 F800                      # Extrude slightly 
      G1 E-{tc.meltzonelength} F800   # Retract filament from meltzone
    {% endif %}
  {% endif %}

  # If current tool has a fan then save the speed of that fan and then shut it down.
  {% if tc.fan|default("none")|lower !="none" %}
    SET_GCODE_VARIABLE MACRO=LOCK_INIT VARIABLE=saved_fan_speed VALUE={printer["fan_generic "~tc.fan].speed}
    SET_FAN_SPEED FAN={tc.fan} SPEED=0
  {% endif %}

  SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=maxx VALUE=0 # Don't use the X max as EmergencyStop.

  # Fast Move to the general pickup position for tools.
  {% if printer.toolhead.position.x|int < safe_x %}
    G0 X{safe_x} Y{tc.zone_y} F40000  # Move near pickup and lift z so we don't crash the bed later.
  {% else %}
    G0 X{safe_x} F40000               # Move X and lift z so we don't crash the bed or into other tools.
    G0 Y{tc.zone_y} F40000            # Move Y after X and Z
  {% endif %}
  M400                                # Wait for current moves to finish

  G0 X{tc.zone_x} F40000              # Fast Move to the dropoff position for tool.
  G0 X{tc.park_x} F6000               # Slow Move to the dropoff position for tool.

  M400                                # Wait for current moves to finish
  TOOL_UNLOCK                         # Unlock the tool

  G0 X{tc.zone_x} F6000               # Slow Move to the pickup position for tool.
  G0 X{safe_x} F40000                 # Fast Move to the general pickup position for tools.
  M400

  SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=maxx VALUE=1 # Use the X max as EmergencyStop.

  # No need to set tool_current variable as it is set to -1 in TOOL_UNLOCK

  RESTORE_GCODE_STATE NAME=TOOL_DROPOFF_002   # Restore Gcode state
