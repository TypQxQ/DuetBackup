[gcode_macro LOCK_INIT]
variable_lock_state: False           # State of the lock. This will be updated from a saved parameter in delayed_gcode INIT_PRINTER at restart.
variable_tool_current: -1            # -2 Unknown tool locked, -1 No tool locked, 0-48 Tool locked, 49 Z-Probe locked.
variable_tool_next: -1               # The tool to be mounted next. -2 = Unknown Tool, -1 = No Tool, 0 = T0, 1= T1, etc.
variable_purge_on_toolchange: 1      # This can be turned off by a macro for automatic probing hot tools without probing them. For example when doing TAMV or ZTATP.
variable_saved_fan_speed: 0          # Saved partcooling fan speed when deselecting a tool with a fan.
variable_safe_x: 500                 # Maximum safe print position in X
gcode:
  { action_respond_info("LOCK_INIT running. "~rawparams) }

  SET_GCODE_VARIABLE MACRO=LOCK_INIT VARIABLE=tool_current VALUE=-1
  TOOL_UNLOCK


[gcode_macro TOOL_UNLOCK]
gcode:
  { action_respond_info("TOOL_UNLOCK running. "~rawparams) }

  SAVE_GCODE_STATE NAME=tool_lock_state                                          # Save gcode state

  MANUAL_STEPPER STEPPER=tool_lock SET_POSITION=180                              # Set assumed possition as rotated to max

  MANUAL_STEPPER STEPPER=tool_lock Move=179 SPEED=30 STOP_ON_ENDSTOP=-1 SYNC=1   # Move until no longer endstop is triggered, max 1degree. If Endstop is not untriggered then raise an error. Wait for the movement before continuing.

  MANUAL_STEPPER STEPPER=tool_lock Move=0 SPEED=100 STOP_ON_ENDSTOP=1 SYNC=1      # Move to min and stop on endstop. If Endstop is not triggered then raise an error. Wait for the movement before continuing.

  MANUAL_STEPPER STEPPER=tool_lock SET_POSITION=0                                # Set manual extruder position as 0

  SET_GCODE_VARIABLE MACRO=LOCK_INIT VARIABLE=lock_state VALUE=False             # Save lock_state as not locked
  RESTORE_GCODE_STATE NAME=tool_lock_state                                       # Restore gcode state

  SAVE_CURRENT_TOOL T=-1                                                         # Save current tool to unloaded

[gcode_macro TOOL_LOCK]
gcode:
    { action_respond_info("TOOL_LOCK running. "~rawparams) }

	{% if not printer["gcode_macro LOCK_INIT"].lock_state %}
      SAVE_GCODE_STATE NAME=tool_unlock_state                                        # Save gcode state

      MANUAL_STEPPER STEPPER=tool_lock SET_POSITION=0                                # Set assumed possition as rotated to min
      MANUAL_STEPPER STEPPER=tool_lock Move=1 SPEED=30 STOP_ON_ENDSTOP=-1 SYNC=1     # Move until no longer endstop is triggered, max 1degree. If Endstop is not untriggered then raise an error. Wait for the movement before continuing.

      SET_TMC_CURRENT STEPPER=tool_lock CURRENT=1.0                                  # Raise current of stepper temporarily

      MANUAL_STEPPER STEPPER=tool_lock Move=150 SPEED=100 STOP_ON_ENDSTOP=1 SYNC=1    # Move to max and stop on endstop. If Endstop is not triggered then raise an error. Wait for the movement before continuing.
      MANUAL_STEPPER STEPPER=tool_lock SET_POSITION=0                                # Set manual extruder position as 0

      SET_TMC_CURRENT STEPPER=tool_lock CURRENT=0.7                                  # Decrease current to standard current.

      SET_GCODE_VARIABLE MACRO=LOCK_INIT VARIABLE=lock_state VALUE=True              # Save lock_state as locked
      RESTORE_GCODE_STATE NAME=tool_unlock_state                                     # Restore gcode state

      SAVE_CURRENT_TOOL T=-2                                                         # Set current tool to loaded with unknown tool

  {% endif %}


    # Runs 1 second after the printer starts to initialize the toollock.
[delayed_gcode INIT_PRINTER]
gcode:
  { action_respond_info("INIT_PRINTER running. "~rawparams) }
  {% set svv = printer.save_variables.variables %}
  {% if svv.tool_current is not defined %} 
    SAVE_VARIABLE VARIABLE=tool_current VALUE={printer["gcode_macro LOCK_INIT"].tool_current}
  {% endif %}
  {% if svv.tool_current == -1  %}
    TOOL_UNLOCK
    M117 ToolLock initialised as unlocked.
  {% else %}
    TOOL_LOCK
    SET_GCODE_VARIABLE MACRO=LOCK_INIT VARIABLE=tool_current VALUE={svv.tool_current}
    M117 ToolLock initialised as locked with tool {svv.tool_current}.
    SAVE_CURRENT_TOOL T={svv.tool_current}
  {% endif %}
initial_duration: 1.0

[gcode_macro SAVE_CURRENT_TOOL]
gcode:
  { action_respond_info("SAVE_CURRENT_TOOL running. "~rawparams) }

  # Set and save the current tool variable.
  SET_GCODE_VARIABLE MACRO=LOCK_INIT VARIABLE=tool_current VALUE={params.T}
  SAVE_VARIABLE VARIABLE=tool_current VALUE={params.T}
