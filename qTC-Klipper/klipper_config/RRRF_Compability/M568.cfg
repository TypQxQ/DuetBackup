[gcode_macro G10]
description: See M568. Passtrough to M568.
gcode:
  M568 {rawparams}



[gcode_macro M568]
description: Pnnn Rnnn Snnn An Nnnn Mnnn
  Set tool temperature.
  P= Tool number, optional. If this parameter is not provided, the current tool is used.
  R= Standby temperature(s), optional
  S= Active temperature(s), optional
  A = Heater State, optional: 0 = off, 1 = standby temperature(s), 2 = active temperature(s).
  N = Time in seconds to wait between changing heater state to standby and setting heater target temperature to standby temperature when standby temperature is lower than tool temperature.
      Use for example 0.1 to change immediately to standby temperature.
  O = Time in seconds to wait from docking tool to shutting off the heater, optional.
      Use for example 86400 to wait 24h if you want to disable shutdown timer.
gcode:
#  RESPOND MSG="M568: Seting new temperature: {rawparams}"

  {% if params.P is defined %}
    {% set tool_id = params.P|int %}
  {% elif printer["gcode_macro LOCK_INIT"].tool_current|int >= 0 %}
    {% set tool_id = printer["gcode_macro LOCK_INIT"].tool_current|int %}
  {% else %}
    { action_raise_error("M568: No tool selected and no tool defined in parameters.") }
  {% endif %}


  # Set physical_tool_id to the physical tool when/if using virtual tools, defaults to tool_id. If this is a virtual tool then this will point to the parent physical tool.
  {% set physical_tool_id = printer["gcode_macro T"~tool_id].ercf_physical_tool|default(tool_id)|int %}

  # If tool has no extruder raise an info and exit
  {% if printer["gcode_macro T"~physical_tool_id].extruder !="none" %}
    {% set newparameters = "" %}  # Parameters to be passed to subroutines in new format.
    
    # R= Standby temperatrure
    {% if params.R is defined %}
      SET_GCODE_VARIABLE MACRO=T{tool_id} VARIABLE=heater_standby_temp VALUE={params.R}            # Save new heater_standby_temp to tool variables.
      {% set newparameters = newparameters ~ " HEATER_STANDBY_TEMP="~params.R %}                   # Set heater_standby_temp to new parameters.
    {% endif %}

    # S= Active temperature(s)
    {% if params.S is defined %}
      SET_GCODE_VARIABLE MACRO=T{tool_id} VARIABLE=heater_active_temp VALUE={params.S}             # Save new heater_active_temp to tool variables.
      {% set newparameters = newparameters ~ " HEATER_ACTIVE_TEMP="~params.S %}                    # Set heater_active_temp to new parameters.
    {% endif %}

    # N = Time in seconds to wait from docking tool to putting the heater in standy
    {% if params.N is defined %}
      SET_GCODE_VARIABLE MACRO=T{physical_tool_id} VARIABLE=idle_to_standby_time VALUE={params.N}  # Save new idle_to_standby_time to tool variables.
      {% set newparameters = newparameters ~ " IDLE_TO_STANDBY_TIME="~params.N %}                  # Set idle_to_standby_time to new parameters.
    {% endif %}

    # M = Time in seconds to wait from docking tool to shuting off the heater
    {% if params.O is defined %}
      SET_GCODE_VARIABLE MACRO=T{physical_tool_id} VARIABLE=idle_to_powerdown_time VALUE={params.O}  # Save new idle_to_powerdown_time to tool variables.
      {% set newparameters = newparameters ~ " IDLE_TO_POWERDOWN_TIME="~params.O %}                  # Set idle_to_powerdown_time to new parameters.
    {% endif %}

    {% if params.A is defined %}
      {% set newparameters = newparameters ~ " HEATER_STATE="~params.A %}                            # Set idle_to_powerdown_time to new parameters.
    {% endif %}

    SUB_M568001 TOOL_ID={tool_id} PHYSICAL_TOOL_ID={physical_tool_id} {newparameters}

  # Else when the tool has no extruder.
  {% else %} 
    {action_respond_info("M568: T"~physical_tool_id~" tool has no extruder")}
  {% endif %}

[gcode_macro SUB_M568001]
description: Internal subroutine. Do not use!
gcode:
#  RESPOND MSG="SUB_M568001: Seting new temperature: {rawparams}"
  {% set tool_id = params.TOOL_ID %}                                                                        # Set Tool Id
  {% set tool = printer["gcode_macro T"~tool_id] %}                                       # Set Physical Tool Object

  {% set physical_tool_id = params.PHYSICAL_TOOL_ID %}                                                      # Set Physical Tool Id
  {% set physical_tool = printer["gcode_macro T"~physical_tool_id] %}                                       # Set Physical Tool Object

  {% set extruder_name = physical_tool.extruder %}                                                          # Set extruder_name variable
  {% set heater_state = physical_tool.heater_state|int %}                                                   # Set heater_state variable

  # If changing/seting heater_state. 0 = off, 1 = standby temperature(s), 2 = active temperature(s)
  {% if params.HEATER_STATE is defined %}                                                                   # If mode is changed
    SET_GCODE_VARIABLE MACRO=T{physical_tool_id} VARIABLE=heater_state VALUE={params.HEATER_STATE}          # Save the new mode

    {% if params.HEATER_STATE|int == 0 %}                                                                   # If Off mode
      SET_HEATER_TEMPERATURE HEATER={extruder_name} TARGET=0                                                # Set temperature to 0
      SUB_M568002 PHYSICAL_TOOL_ID={physical_tool_id} IDLE_TO_STANDBY_TIME=0 IDLE_TO_POWERDOWN_TIME=0       # Disable standy temperature and standby to shutdown timer.

    {% elif params.HEATER_STATE|int == 2 %}                                                                 # If Active mode
      SET_HEATER_TEMPERATURE HEATER={extruder_name} TARGET={tool.heater_active_temp}                        # Set temperature to active temperature.
      SUB_M568002 PHYSICAL_TOOL_ID={physical_tool_id} IDLE_TO_STANDBY_TIME=0 IDLE_TO_POWERDOWN_TIME=0       # Disable standy timers.

      

    {% elif params.HEATER_STATE|int == 1 %}                                                                 # If Standby mode
    SUB_M568003 TOOL_ID={tool_id} PHYSICAL_TOOL_ID={physical_tool_id}                                       # Set the placeholder_standby_temp value of the tool.

                                                                                                            # If standby temperature is higher than the current temperature or if setting heater state to standby when already in standby.
      {% if tool.heater_standby_temp|int > printer[extruder_name].temperature|int or heater_state == 1 %}  
        SUB_M568002 PHYSICAL_TOOL_ID={physical_tool_id} IDLE_TO_STANDBY_TIME=0.1 IDLE_TO_POWERDOWN_TIME={physical_tool.idle_to_powerdown_time}                             # Disable standy temperature timer and start standby to shutdown timer.
      {% else %}                                                                                            # Else (Standby temperature is lower than the current temperature)
        SUB_M568002 PHYSICAL_TOOL_ID={physical_tool_id} IDLE_TO_STANDBY_TIME={physical_tool.idle_to_standby_time} IDLE_TO_POWERDOWN_TIME={physical_tool.idle_to_powerdown_time} # Start the standby and shutdown temperature timers.
      {% endif %}                                                                                           # Endif Standby temperature
    {% endif %}                                                                                             # Endif Type of mode

  # Else (If not requested to change heater state)
  {% else %}                                                                                                

    # If physical tool is in standby mode and standby temperature is defined and current tool is same as tool.
    {% if heater_state == 1 and params.HEATER_STANDBY_TEMP is defined and printer["gcode_macro LOCK_INIT"].tool_current|int == tool_id %}                                    
      SUB_M568002 PHYSICAL_TOOL_ID={physical_tool_id} IDLE_TO_STANDBY_TIME={physical_tool.idle_to_standby_time} IDLE_TO_POWERDOWN_TIME={physical_tool.idle_to_powerdown_time}  # Start the standby and shutdown temperature timers.
      SET_HEATER_TEMPERATURE HEATER={extruder_name} TARGET={params.HEATER_STANDBY_TEMP}                     # Set the standby temperature instantly
      SUB_M568003 TOOL_ID={tool_id} PHYSICAL_TOOL_ID={physical_tool_id}                                     # Set the placeholder_standby_temp value of the tool.
    {% elif heater_state == 2 and params.HEATER_ACTIVE_TEMP is defined and printer["gcode_macro LOCK_INIT"].tool_current|int == tool_id %}                                   # ElseIf tool is in active mode and active temperature is defined
      SET_HEATER_TEMPERATURE HEATER={extruder_name} TARGET={params.HEATER_ACTIVE_TEMP}                      # Set temperature to active temperature.
    {% endif %}                                                                                             # Endif new temperature for current mode
  {% endif %}                                                                                               # Endif param.A is defined


[gcode_macro SUB_M568002]
# Subroutine Only for setting the delayed gcode standby timers.
# PHYSICAL_TOOL_ID = Tool number passed from previous command
# IDLE_TO_STANDBY_TIME = Time in seconds to wait from docking tool to putting the heater in standy
# IDLE_TO_POWERDOWN_TIME = Time in seconds to wait from docking tool to shuting off the heater
description: Internal subroutine. Do not use!
gcode:
  UPDATE_DELAYED_GCODE ID=T{params.PHYSICAL_TOOL_ID}_standby DURATION={params.IDLE_TO_STANDBY_TIME}
  UPDATE_DELAYED_GCODE ID=T{params.PHYSICAL_TOOL_ID}_powerdown DURATION={params.IDLE_TO_POWERDOWN_TIME}


[gcode_macro SUB_M568003]
# Subroutine Only for seting the placeholder_standby_temp of PHYSICAL_TOOL_ID variable to the heater_standby_temp of TOOL_ID if a placeholder_standby_temp exists for PHYSICAL_TOOL_ID.
# PHYSICAL_TOOL_ID = Tool number passed from previous command
# TOOL_ID = Tool number passed from previous command. Can be a virtual tool.
description: Internal subroutine. Do not use!
gcode:
  {% if printer["gcode_macro T"~params.PHYSICAL_TOOL_ID].placeholder_standby_temp is defined %}
    SET_GCODE_VARIABLE MACRO=T{params.PHYSICAL_TOOL_ID} VARIABLE=placeholder_standby_temp VALUE={printer["gcode_macro T"~params.TOOL_ID].heater_standby_temp}            # Save new heater_standby_temp to tool variables.
  {% endif %}
