# This command can be used without any additional parameters.
# Without parameters it waits for bed and current extruder.
# 
# Pnnn Tool number
# Hnnn Heater number. 0="heater_bed", 1="extruder", 2="extruder1", etc.
# Snn Tolerance in degC. Defaults to 2*C

[gcode_macro M116]
gcode:
  { action_respond_info("M116: Waiting for tool heatup: "~rawparams) }

  {% set s = params.S|default(2)|int %}

  {% if params.P is defined and params.H is defined  %}
    { action_raise_error("M116: Can't use both P and H parameter.") }
  {% elif params.P is defined  %} # Tool is defined
    {% set heater = printer["gcode_macro T"~params.P|string].extruder %}  # heater to extruder of tool.
  {% elif params.H is defined  %} # Heater is defined
    {% set h = params.H|int %}
    {% if h == 0  %} # Heater is defined
      {% set heater = "heater_bed" %}
    {% else %}
      {% set h = h-1 %}
      {% if h == 0  %} # Heater is valid for a tool
        {% set heater = "extruder" %}
      {% elif h > 0  %} # Heater is valid for a tool
        {% set heater = "extruder"~h %}
      {% else %} # Not a valid h
        { action_raise_error("M116: Invalid H parameter.") }
      {% endif %} # /Heater is valid for a tool
    {% endif %} # /Heater is defined
  {% else %} # Wait for both bed and current extruder if no parameters passed.
      # Wait for Bed
    {% set bedtarget_temp = printer[heater].target|int %}
    {% if bedtarget_temp > 40 %}  # Only wait for target temperatures over 40*C
      TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bedtarget_temp-s} MAXIMUM={bedtarget_temp+s}
    {% endif %} # / TargetTemp > 40*C
    {% set heater = printer.toolhead.extruder %} # Set heater to active heater.
  {% endif %}

  {% set target_temp = printer[heater].target|int %}
  {% if target_temp > 40 %}  # Only wait for target temperatures over 40*C
    TEMPERATURE_WAIT SENSOR={heater} MINIMUM={target_temp-s} MAXIMUM={target_temp+s}
  {% endif %}

  { action_respond_info("M116: Wait for tool heatup complete.") }
