########################################################################################################################
# Happy Hare supporting macros
#  Callouts for Happy Hare state changes
#
# THIS FILE IS READ ONLY
#

###########################################################################
# Called when when the MMU action status changes
#
# The `ACTION` parameter will contain the current action string
# (also available in `printer.mmu.action` printer variable).
# Also the previous action is available in `OLD_ACTION`.
#
# See Happy Hare README for full list of action strings, but a quick ref is:
#
#  Idle|Loading|Unloading|Loading Ext|Exiting Ext|Forming Tip|Heating|Checking|Homing|Selecting
#
# The reference logic here drives a set of optional LED's
#
[gcode_macro _MMU_ACTION_CHANGED]
description: Called when an action has changed
gcode:
    {% set vars = printer['gcode_macro _MMU_STATE_VARS'] %}
    {% set action = params.ACTION|string %}
    {% set old_action = params.OLD_ACTION|string %}

    _MMU_LED_ACTION_CHANGED {rawparams}

    {% if not vars.user_action_changed_extension == "" %} 
        {vars.user_action_changed_extension} {rawparams}
    {% endif %}


###########################################################################
# Called when the MMU print state changes
#
# The `STATE` parameter will contain the current state string
# (also available in `printer.mmu.print_state` printer variable)
# Also the previous action is available in `OLD_STATE`.
#
# See Happy Hare README for full list of state strings and the state transition
# diagram, but a quick ref is:
#
#  initialized|ready|started|printing|complete|cancelled|error|pause_locked|paused|standby
#
# The reference logic here drives a set of optional LED's
#
[gcode_macro _MMU_PRINT_STATE_CHANGED]
description: Called when print state changes
gcode:
    {% set vars = printer['gcode_macro _MMU_STATE_VARS'] %}
    {% set state = params.STATE|string %}
    {% set old_state = params.OLD_STATE|string %}

    _MMU_LED_PRINT_STATE_CHANGED {rawparams}

    {% if not vars.user_print_state_changed_extension == "" %} 
        {vars.user_print_state_changed_extension} {rawparams}
    {% endif %}


###########################################################################
# Called when the MMU gate_map (containing information about the filament
# type, color, availability and spoolId) is updated
#
# The `GATE` parameter will contain the gate that is updated or -1 if all updated
#
# The reference logic here drives a set of optional LED's
#
[gcode_macro _MMU_GATE_MAP_CHANGED]
description: Called when gate map is updated
gcode:
    {% set vars = printer['gcode_macro _MMU_STATE_VARS'] %}
    {% set gate = params.GATE|int %}

    _MMU_LED_GATE_MAP_CHANGED {rawparams}

    {% if not vars.user_gate_map_changed_extension == "" %} 
        {vars.user_gate_map_changed_extension} {rawparams}
    {% endif %}

