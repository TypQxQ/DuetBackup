[gcode_macro test_speed_fast]
gcode:
        G28 X0 Y0
        M114
        G1 X0 Y0     F60000
        G1 X500 Y500 F60000
        G1 X0 Y0     F60000
        G1 X500 Y500 F60000

        G1 X0 Y500 F60000

        G1 X500 Y0 F60000
        G1 X0 Y500 F60000
        G1 X500 Y0 F60000
        G1 X0 Y500 F60000

        G1 X0 Y0 F60000
        G1 X500 Y0 F60000
        G1 X500 Y500 F60000
        G1 X0 Y500 F60000
        G1 X0 Y0 F60000
        ;G28 X0 Y0
        M114


[gcode_macro GoToProbeXYZ]
gcode:
  G90
  G0 x43.9 y63.87 Z173

[gcode_macro GoToProbeXY]
gcode:
  G90
  G0 x389.10 y205.30

[gcode_macro TEST]
gcode:
  KTC__TOOL__SET__TEMPERATURE TOOL=9 STDB_TMP=129 ACTV_TMP=209 STDB_TIMEOUT=0.1 SHTDWN_TIMEOUT=19
  KTC__TOOL__SET__TEMPERATURE TOOL=10 STDB_TMP=130 ACTV_TMP=210 STDB_TIMEOUT=0.1 SHTDWN_TIMEOUT=20
  KTC__TOOL__SET__TEMPERATURE TOOL=11 STDB_TMP=131 ACTV_TMP=211 STDB_TIMEOUT=0.1 SHTDWN_TIMEOUT=21

  # _MMU_CUT_TIP

[gcode_macro TST_TPFD]
gcode:
  M18
  {% set value = params.VALUE|lower %}
  SET_TMC_FIELD STEPPER=stepper_x FIELD=TPFD VALUE={value}
  SET_TMC_FIELD STEPPER=stepper_x1 FIELD=TPFD VALUE={value}
  SET_TMC_FIELD STEPPER=stepper_y FIELD=TPFD VALUE={value}
  SET_TMC_FIELD STEPPER=stepper_y1 FIELD=TPFD VALUE={value}

[gcode_macro SEARCH_VARS]
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}

[gcode_macro KTC_Stats]
gcode:
  KTC_STATS_REPORT

# this is a helpful macro for easily testing toolhead unload/buffer load sequence
#
# !!! you must remove the bowden from the toolhead before running this macro.  you've been warned !!!
#
# the macro call will:
#
#  - select a tool
#  - prime the filament in the gate
#  - advance filament the length of the reverse bowden to simulate toolhead load
#  - advance filament to simulate extrusion
#  - retract filament the length of the reverse bowden to simulate toolhead unload
# 
#
# basic usage:
#
#  PIKA_TEST_BUFFER TOOL=[tool] BOWDEN=[ercf_calib_ref]
#
# available options:
#
#  TOOL:    the tool to test.  defaults to T0
#  BOWDEN:  length of the reverse bowden from the toolhead to the ercf.  should be roughly same as ercf_calib_ref.  defaults to 1500mm
#  SPEED:   unload speed, from toolhead into buffer.  defaults to 150mm/s
#  EXTRUDE: length of filament to "extrude."  defaults to 200mm
#  TIMES:   iterations of the load-extrude-unload cycle
#  LOOPS:   overrides BOWDEN.  number of loops around the wheel inside the pika, useful for buffer capacity testing.  supports 1-8 loops.


[gcode_macro PIKA_TEST_BUFFER]
gcode:
  {% set loops = params.LOOPS | default(0) | int %}
  {% set bowden = params.BOWDEN | default(1820) | int %}
  {% set extrude =  params.EXTRUDE | default(50) | int %}
  {% set times = params.TIMES | default(1) | int %}
  {% set tool = params.TOOL | default(0, True) | int %}
  {% set speed = params.SPEED | default(100) | int %}

  {% if not printer.ercf.is_homed %}
    { action_raise_error("must home ercf first - aborting") }
  {% endif %}

  {% set loops_to_bowden = ({
    1: 300,
    2: 600,
    3: 900,
    4: 1200,
    5: 1500,
    6: 1800,
    7: 2100, 
    8: 2300
  }) %}

  ERCF_SELECT TOOL={tool}

  {% if loops %}
    {% set bowden = loops_to_bowden[loops] %}
  {% endif %}

  ERCF_TEST_LOAD LENGTH=50

  _PIKA_CHECK_LOADED

  M118 {"starting test - iterations: %d, bowden: %d, extrude: %d" % (times, bowden, extrude) }

  {% for i in range(times) %}

    {% set e = extrude + (i*times) %}

    {% if i %}
      M118 settling...
      G4 P1000
    {% endif %}

    M118 simulating toolhead load...
    ERCF_TEST_MOVE_GEAR LENGTH={bowden} SPEED={speed}
    M400

    M118 simulating extrude...
    ERCF_TEST_MOVE_GEAR LENGTH={e} SPEED=5
    M400

    M118 buffering {bowden}mm at {speed}...
    ERCF_TEST_MOVE_GEAR LENGTH=-{bowden} SPEED={speed}
    M400
  {% endfor %}

  ERCF_SERVO_UP

  M118 test complete - gather filament


[gcode_macro _PIKA_CHECK_LOADED]
gcode:
  {% if printer.ercf.loaded_status <= 0 %}
    { action_raise_error("filament not loaded - aborting") }
  {% endif %}