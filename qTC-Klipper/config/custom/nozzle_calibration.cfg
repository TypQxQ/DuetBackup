# 
#############################################################################################################
# 
# visual assisted offset calibration macros, called from the mainsail nozzle calibration UI
# 
#############################################################################################################
[gcode_macro _NOZZLE_CALIBRATION_LOAD_TOOL]
gcode:
  # parameters
  {% set t = params.T|default(0)|int %}

  # echo
  M118 _NOZZLE_CALIBRATION_LOAD_TOOL T={t} 

  # load toolhead
  T{t} 
  G90
  G0 x43.9 y63.87 Z173 F6000

[gcode_macro NOZZLE_CALIBRATION_SET_CONTROL]
gcode:
  {% if t == printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
    # set control point
    {% set x = printer.toolhead.position.x|float %}
    {% set y = printer.toolhead.position.y|float %}
    {% set z = printer.toolhead.position.z|float %}
    M118 set control point: X{x} Y{y} Z{z}
    # SAVE_VARIABLE VARIABLE=xcontrolpoint VALUE={x}
    # SAVE_VARIABLE VARIABLE=ycontrolpoint VALUE={y}
    # SAVE_VARIABLE VARIABLE=zcontrolpoint VALUE={z}

[gcode_macro _NOZZLE_CALIBRATION_SET_TOOL]
gcode:
  # set toolhead offset
  {% set x = printer.toolhead.position.x|float - svv.xcontrolpoint|float %}
  {% set y = printer.toolhead.position.y|float - svv.ycontrolpoint|float %}
  {% set z = printer.toolhead.position.z|float - svv.zcontrolpoint|float %}
  M118 set T{t} offset: X{x} Y{y} Z{z}
  # SAVE_VARIABLE VARIABLE=xoffset VALUE={x}
  # SAVE_VARIABLE VARIABLE=yoffset VALUE={y}
  # SAVE_VARIABLE VARIABLE=zoffset VALUE={z}
  # SET_GCODE_OFFSET X_ADJUST={0-svv.xoffset} Y_ADJUST={0-svv.yoffset} Z_ADJUST={0-svv.zoffset} MOVE=0
  # SET_GCODE_OFFSET X_ADJUST={x} Y_ADJUST={y} Z_ADJUST={z} MOVE=0



[gcode_macro _NOZZLE_CALIBRATION_LOAD_TOOL_old]
gcode:
  # parameters
  {% set t = params.T|default(0)|int %}

  # echo
  M118 _NOZZLE_CALIBRATION_LOAD_TOOL T={t} 

  # ratos variables file
  {% set svv = printer.save_variables.variables %}

  # config
  {% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed * 60 %}
  {% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}

  # load toolhead
  {% set xcontrolpoint = svv.xcontrolpoint|default(150)|float %}
  {% set ycontrolpoint = svv.ycontrolpoint|default(30)|float %}
  {% set zcontrolpoint = svv.zcontrolpoint|default(50)|float %}
  M118 Move T{t} to control point: X{xcontrolpoint} Y{ycontrolpoint} Z{zcontrolpoint} 
  T{t} X{xcontrolpoint} Y{ycontrolpoint} 
  G1 Z{zcontrolpoint} F{z_speed}
  G1 X{xcontrolpoint} F{speed}
  G1 Y{ycontrolpoint} F{speed}


[gcode_macro _NOZZLE_CALIBRATION_SET_TOOL_old]
gcode:
  # ratos variables file
  {% set svv = printer.save_variables.variables %}

  # get IDEX mode
  {% set idex_mode = 'none' %}
	{% if printer["dual_carriage"] is defined %}
		{% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
	{% endif %}
  {% set t = 1 if idex_mode=='primary' else 0 %}
  
  {% if t == printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
    # set control point
    {% set x = printer.toolhead.position.x|float %}
    {% set y = printer.toolhead.position.y|float %}
    {% set z = printer.toolhead.position.z|float %}
    M118 set control point: X{x} Y{y} Z{z}
    SAVE_VARIABLE VARIABLE=xcontrolpoint VALUE={x}
    SAVE_VARIABLE VARIABLE=ycontrolpoint VALUE={y}
    SAVE_VARIABLE VARIABLE=zcontrolpoint VALUE={z}
  {% else %}
    # set toolhead offset
    {% set x = printer.toolhead.position.x|float - svv.xcontrolpoint|float %}
    {% set y = printer.toolhead.position.y|float - svv.ycontrolpoint|float %}
    {% set z = printer.toolhead.position.z|float - svv.zcontrolpoint|float %}
    M118 set T{t} offset: X{x} Y{y} Z{z}
    SAVE_VARIABLE VARIABLE=xoffset VALUE={x}
    SAVE_VARIABLE VARIABLE=yoffset VALUE={y}
    SAVE_VARIABLE VARIABLE=zoffset VALUE={z}
    SET_GCODE_OFFSET X_ADJUST={0-svv.xoffset} Y_ADJUST={0-svv.yoffset} Z_ADJUST={0-svv.zoffset} MOVE=0
    SET_GCODE_OFFSET X_ADJUST={x} Y_ADJUST={y} Z_ADJUST={z} MOVE=0
  {% endif %}


[gcode_macro _NOZZLE_CALIBRATION_PROBE_Z_OFFSET]
gcode:
  # get IDEX mode
  {% set idex_mode = 'none' %}
  {% if printer["dual_carriage"] is defined %}
    {% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
  {% endif %}
  {% set t = 1 if idex_mode=='primary' else 0 %}

  # ratos variables file
  {% set svv = printer.save_variables.variables %}

  # config
  {% set x_offset = printer["zoffsetprobe"].x_offset|default(0)|float %}
  {% set y_offset = printer["zoffsetprobe"].y_offset|default(0)|float %}
  {% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed * 60 %}
  {% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}

  # probe z-offset
	{% if printer["zoffsetprobe"] is defined %}
    {% set xcontrolpoint = svv.xcontrolpoint|default(150)|float %}
    {% set ycontrolpoint = svv.ycontrolpoint|default(30)|float %}
    {% set zcontrolpoint = svv.zcontrolpoint|default(50)|float %}
    G1 Z{zcontrolpoint} F{z_speed}
    G1 X{xcontrolpoint + x_offset} Y{ycontrolpoint + y_offset} F{speed}
    Z_OFFSET_PROBE
    G0 Z{zcontrolpoint} F{z_speed}
    G1 X{xcontrolpoint} Y{ycontrolpoint} F{speed}
    UPDATE_DELAYED_GCODE ID=_NOZZLE_CALIBRATION_SET_Z_OFFSET DURATION=0.1
  {% endif %}


[delayed_gcode _NOZZLE_CALIBRATION_SET_Z_OFFSET]
gcode:
  # get IDEX mode
  {% set idex_mode = 'none' %}
  {% if printer["dual_carriage"] is defined %}
    {% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
  {% endif %}
  {% set t = 1 if idex_mode=='primary' else 0 %}

  # ratos variables file
  {% set svv = printer.save_variables.variables %}

  # config
  {% set last_z = printer["zoffsetprobe"].last_z_result|default(0)|float %}
  {% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}

	{% if printer["zoffsetprobe"] is defined %}
    {% if t == printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
      # set control point
      M118 z-offset control point {last_z}
      SAVE_VARIABLE VARIABLE=zoffsetcontrolpoint VALUE={last_z}
    {% else %}
      # set toolhead offset
      {% set z = last_z - svv.zoffsetcontrolpoint|float %}
      M118 set T{t} offset: Z{z}
      SAVE_VARIABLE VARIABLE=zoffset VALUE={z}
      SET_GCODE_OFFSET Z_ADJUST={0-svv.zoffset} MOVE=0
      SET_GCODE_OFFSET Z_ADJUST={z} MOVE=0
      G0 Z{svv.zcontrolpoint|float} F{z_speed}
    {% endif %}
  {% endif %}


[gcode_macro _NOZZLE_CALIBRATION_SWITCH_LED]
gcode:
  {% if printer['neopixel nozzle_calibration_led'] is defined %}
    {% if params.STATE|default(0)|int == 1 %}
      NOZZLE_CALIBRATION_LIGHT_ON
    {% else %}  
      NOZZLE_CALIBRATION_LIGHT_OFF
    {% endif %}
  {% endif %}


#############################################################################################################
# 
# Nozzle Calibration LED
# 
#############################################################################################################
[neopixel nozzle_calibration_led]
pin: PE15
chain_count: 4
color_order: GRB
initial_RED: 0.0
initial_GREEN: 0.0


[gcode_macro NOZZLE_CALIBRATION_LIGHT_ON]
gcode:
  SET_LED LED=nozzle_calibration_led RED=1.0 GREEN=1.0 BLUE=1.0


[gcode_macro NOZZLE_CALIBRATION_LIGHT_OFF]
gcode:
  SET_LED LED=nozzle_calibration_led RED=0.0 GREEN=0.0 BLUE=0.0

#############################################################################################################
# # 
# # manual offset calibration macros
# # 
# #############################################################################################################

# # Configure this to draw 2 line segments perpendicular to the dual_carraige axis
# # that meet in the middle of the bed. Both lines should have the same coordinate
# # on the axis of the dual_carraige. If they don't print inline, adjust your endstop
# # settings.
# [gcode_macro set_separation]
# gcode:
#     {% set svv = printer.save_variables.variables %}

#     {% set oldX = svv.xoffset|float %}
#     {% set oldY = svv.yoffset|float %}
#     {% set oldZ = svv.zoffset|float %}

#     {% if params.X is defined %}
#         SAVE_VARIABLE VARIABLE=xoffset VALUE={ params.X|float }
#     {% endif %}

#     {% if params.Y is defined %}
#         SAVE_VARIABLE VARIABLE=yoffset VALUE={ params.Y|float }
#     {% endif %}

#     {% if params.Z is defined %}
#         SAVE_VARIABLE VARIABLE=zoffset VALUE={ params.Z|float }
#     {% endif %}

#     {% if params.X_ADJUST is defined %}
#         {% set newX = params.X_ADJUST|float + oldX %}
#         SAVE_VARIABLE VARIABLE=xoffset VALUE={ newX|float }
#     {% endif %}

#     {% if params.Y_ADJUST is defined %}
#         {% set newY = params.Y_ADJUST|float + oldY %}
#         SAVE_VARIABLE VARIABLE=yoffset VALUE={ newY|float }
#     {% endif %}

#     {% if params.Z_ADJUST is defined %}
#         {% set newZ = params.Z_ADJUST|float + oldZ %}
#         SAVE_VARIABLE VARIABLE=yoffset VALUE={ newZ|float }
#     {% endif %}


# [gcode_macro calibrate_separation]
# gcode:
#     # config 
#     {% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed * 60 %}
#     {% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
#     {% set max_x = printer.configfile.settings.stepper_x.position_max|float %}
#     {% set max_y = printer.toolhead.axis_maximum.y|float %}
#     {% set center_x = max_x / 2 %}
#     {% set center_y = max_y / 2 %}

#     MAYBE_HOME
#     G90
#     M83

#     G1 Z2 F{z_speed}
#     T1 X{center_x} Y{center_y - 50} S1
#     G1 X{center_x} Y{center_y - 50} F{speed}
#     G1 Z0.2 F{z_speed}
#     G1 Y{center_y - 1} E4 F500
#     G1 Z2 F{z_speed}
#     G1 X{center_x - 50} Y{center_y} F{speed}
#     G1 Z0.2 F{z_speed}
#     G1 X{center_x - 1} E4 F500

#     G1 Z2 F{z_speed}
#     T0 X{center_x} Y{center_y + 50} S1
#     G1 Z0.2 F{z_speed}
#     G1 Y{center_y + 1} E4 F500
#     G1 Z2 F{z_speed}
#     G1 X{center_x + 50} Y{center_y} F{speed}
#     G1 Z0.2 F{z_speed}
#     G1 X{center_x + 1} E4 F500

#     G1 Z15 F{z_speed}
#     G1 X{center_x} Y{center_y + 75} F{speed}

#     {% if printer["gcode_macro RatOS"].relative_extrusion|lower == 'true' %}
#         M83
#     {% else %}
#         M82
#     {% endif %}

#     T{printer["gcode_macro RatOS"].default_toolhead|default(0)|int} X{center_x} Y{center_y} S0

