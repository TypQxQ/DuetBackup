[ktc_log]
log_level: 2
logfile_level: 4
rollover_logfile_at_startup: True

[ktc]
requires_axis_homed: X Y Z
# offset = 0,0,0
default_toolchanger = Jubilee
# Used to indicate when a hotend should not be purged. For example when doing TAMV or ZTATP. Used by macros.
params_purge_on_toolchange = True
debug_with_profile = True

[ktc_toolchanger ERCF]
parent_tool= 20

[ktc_toolchanger Jubilee]
params_park: 598,200, 0
init_mode = ON_START
engage_gcode:
  # SAVE_GCODE_STATE NAME=tool_unlock_state                                         # Save gcode state
  MANUAL_STEPPER STEPPER=tool_lock SET_POSITION=0                                 # Set assumed possition as rotated to min
  MANUAL_STEPPER STEPPER=tool_lock Move=1 SPEED=30 STOP_ON_ENDSTOP=-1 SYNC=1      # Move until no longer endstop is triggered, max 1degree. If Endstop is not untriggered then raise an error. Wait for the movement before continuing.
  SET_TMC_CURRENT STEPPER=tool_lock CURRENT=1.0                                   # Raise current of stepper temporarily
  MANUAL_STEPPER STEPPER=tool_lock Move=140 SPEED=50 STOP_ON_ENDSTOP=2 SYNC=1     # Move to max and stop on endstop. If Endstop is not triggered then don't raise an error. Wait for the movement before continuing.
  # If endstop is not triggered then try to lock again for safety. Best to check the endstops before calling this. 
  QUERY_ENDSTOP_CONTINUESLY ENDSTOP='manual_stepper tool_lock' ATEMPTS=3
  _TOOL_LOCK_ENDSTOP_CHECK
  M400
  MANUAL_STEPPER STEPPER=tool_lock SET_POSITION=0                                 # Set manual extruder position as 0
  SET_TMC_CURRENT STEPPER=tool_lock CURRENT=0.7                                   # Decrease current to standard current.
  # RESTORE_GCODE_STATE NAME=tool_unlock_state MOVE=0                               # Restore gcode state
  RESPOND MSG="KTC state: {ktc.state|default("none")|lower}."
  {% if ktc.state|default("none")|lower != STATE_TYPE.CHANGING|lower and ktc.state|default("none")|lower != STATE_TYPE.INITIALIZING|lower %}
    RESPOND MSG="KTC state is not changing or initializing."
    KTC_TOOLCHANGER_SET_SELECTED_TOOL TOOLCHANGER={myself.name} TOOL={ktc.TOOL_UNKNOWN}
    KTC_SET_ACTIVE_TOOL TOOL={ktc.TOOL_UNKNOWN}
    RESPOND MSG="Toolchanger {myself.name} engaged"
  {% endif %}
  KTC_SET_STATE TOOLCHANGER={myself.name} STATE=ENGAGED

disengage_gcode:
  # SAVE_GCODE_STATE NAME=tool_lock_state                                           # Save gcode state
  MANUAL_STEPPER STEPPER=tool_lock SET_POSITION=180                               # Set assumed possition as rotated to max
  MANUAL_STEPPER STEPPER=tool_lock Move=179 SPEED=30 STOP_ON_ENDSTOP=-1 SYNC=1    # Move until no longer endstop is triggered, max 1degree. If Endstop is not untriggered then raise an error. Wait for the movement before continuing.
  MANUAL_STEPPER STEPPER=tool_lock Move=0 SPEED=100 STOP_ON_ENDSTOP=2 SYNC=1      # Move to min and stop on endstop. If Endstop is not triggered then raise an error. Wait for the movement before continuing.
  # If endstop is not triggered then try to lock again for safety. Best to check the endstops before calling this. 
  QUERY_ENDSTOP_CONTINUESLY ENDSTOP='manual_stepper tool_lock' ATEMPTS=3
  _TOOL_UNLOCK_ENDSTOP_CHECK
  M400
  MANUAL_STEPPER STEPPER=tool_lock SET_POSITION=0                                 # Set manual extruder position as 0
  MANUAL_STEPPER STEPPER=tool_lock ENABLE=0                                       # Turn off the stepper while unlocked so it can rest without triggering the endswitch
  # RESTORE_GCODE_STATE NAME=tool_lock_state MOVE=0                                 # Restore gcode state
  {% if ktc.active_tool|default("none")|lower == myself.selected_tool|default("none")|lower %}
    KTC_SET_ACTIVE_TOOL TOOL={ktc.TOOL_NONE}       # Set the active tool to none
  {% endif %}
  KTC_TOOLCHANGER_SET_SELECTED_TOOL TOOLCHANGER={myself.name} TOOL={ktc.TOOL_NONE}
  KTC_SET_STATE TOOLCHANGER={myself.name} STATE=READY
  {% if ktc.state|default("none")|lower != STATE_TYPE.CHANGING or ktc.state|default("none")|lower != STATE_TYPE.INITIALIZING %}
    RESPOND MSG="Toolchanger {myself.name} disengaged"
  {% endif %}

init_gcode:
  {% if myself.selected_tool|default("none")|lower == ktc.TOOL_NONE|lower %}
    KTC_TOOLCHANGER_DISENGAGE TOOLCHANGER={myself.name}
    KTC_SET_ACTIVE_TOOL TOOL={ktc.TOOL_NONE}
    KTC_SET_STATE TOOLCHANGER={myself.name} STATE=READY
    RESPOND MSG="Toolchanger {myself.name} initialized unlocked, without tool"
  {% else %}
    KTC_TOOLCHANGER_ENGAGE TOOLCHANGER={myself.name} IGNORE_ENGAGED=True
    RESPOND MSG="Toolchanger {myself.name} initialized with tool {myself.selected_tool}"
  {% endif %}
  # RESPOND MSG="Tool parameter: {printer['ktc_tool 20'].params_zone}."

##### Selectable tool.
[ktc_tool 0]
tool_number: 0
toolchanger: ERCF
# parent_tool: 0          # Tool id used as a Physical parent for all toos of this group. Only used if the tool i virtual.
# virtual_toolload_gcode:
#  _VIRTUALTOOL_LOAD T={myself.number}
# virtual_toolunload_gcode:
#  _VIRTUALTOOL_UNLOAD_VIRTUALTOOL_LOAD T={myself.number}
# unload_virtual_at_dropoff: 0
#heater_active_to_standby_delay: 30
#heater_active_to_powerdown_delay: 600

##### Following can be inherited from Physical parent if not specified for this ktc_tool. Needed only by physical ktc_tools.
heater: extruder
fans: partfan_t0
params_zone: 555
params_park:598,200, 0
# init_offset: 12.535,3.934,3.76 #3.00
#####
##### Following can be inherited from other tool if not specified for this ktc_tool or inherited from a Physical parent.
#parent_tool:                  # Defaults to None.
params_meltzonelength: 14                 # Defaults to 0
#####
##### Options below have no effect on Virtual tools.
#heater_active_to_standby_delay: 0.1          # Time in seconds from being parked to setting temperature to standby the temperature above. Use 0.1 to change imediatley to standby temperature. Defaults to 30
#heater_active_to_powerdown_delay: 600       # Time in seconds from being parked to setting temperature to 0. Use something like 86400 to wait 24h if you want to disable. Defaults to 600
#lazy_home_when_parking: 0         # (default: 0 - disabled) - When set to 1, will home unhomed XY axes if needed and will not move any axis if already homed and parked. 2 Will also home Z if not homed.
params_shaper_freq_x = 48.4
params_shaper_freq_y = 114.6
params_shaper_type_x = "MZV"
params_shaper_type_y = "2hump_ei"

#tool_select_gcode= The code that is run when picking up the physical tool. Variable {myself} refers to the tool calling this code.
tool_select_gcode: 
  _TOOL_PICKUP_START T={myself.name}
  _TOOL_PICKUP_END T={myself.name}
  SET_INPUT_SHAPER SHAPER_FREQ_X={myself.params_shaper_freq_x} SHAPER_FREQ_Y={myself.params_shaper_freq_y} SHAPER_TYPE_X={myself.params_shaper_type_x} SHAPER_TYPE_Y={myself.params_shaper_type_y}
  # SET_INPUT_SHAPER SHAPER_FREQ_X=48.4 SHAPER_FREQ_Y=114.6 SHAPER_TYPE_X=MZV SHAPER_TYPE_Y=2hump_ei

  SET_PRESSURE_ADVANCE ADVANCE=0.06

tool_deselect_gcode:
  _TOOL_DROPOFF_START T={myself.name}
  _TOOL_DROPOFF_END T={myself.name}

[ktc_tool 1]
tool_number: 1
toolchanger: ERCF
[ktc_tool 2]
tool_number: 2
toolchanger: ERCF
[ktc_tool 3]
tool_number: 3
toolchanger: ERCF
[ktc_tool 4]
tool_number: 4
toolchanger: ERCF
[ktc_tool 5]
tool_number: 5
toolchanger: ERCF
[ktc_tool 6]
tool_number: 6
toolchanger: ERCF
[ktc_tool 7]
tool_number: 7
toolchanger: ERCF
[ktc_tool 8]
tool_number: 8
toolchanger: ERCF

[ktc_tool 9]
requires_axis_homed: XY
tool_number: 9
toolchanger: Jubilee
heater: extruder1
fans: partfan_t9
params_zone: 555
params_park:598,100,0
# init_offset: -0.655,-0.294,-0.74 #-1.392
params_meltzonelength: 14
# heater_active_to_standby_delay: 0.1
tool_select_gcode: 
  _TOOL_PICKUP_START T={myself.name}
  _TOOL_PICKUP_END T={myself.name}
  SET_INPUT_SHAPER SHAPER_FREQ_X=48.4 SHAPER_FREQ_Y=114.6 SHAPER_TYPE_X=MZV SHAPER_TYPE_Y=2hump_ei
  SET_PRESSURE_ADVANCE ADVANCE=0.12
tool_deselect_gcode:
  _TOOL_DROPOFF_START T={myself.name}
  _TOOL_DROPOFF_END T={myself.name}

[ktc_tool 20]
tool_number: 20
toolchanger: Jubilee
# heater_active_to_standby_delay: 0.1
# heater_active_to_powerdown_delay: 0.1
tool_deselect_gcode:
  _TOOL_DROPOFF_START T={myself.name}
  _TOOL_DROPOFF_END T={myself.name}

##### Following can be inherited from Physical parent if not specified for this ktc_tool. Needed only by physical ktc_tools.
heater: extruder
fans: partfan_t0
params_zone: 555
params_park:598,200, 0
# init_offset: 12.535,3.934,3.76 #3.00
params_meltzonelength: 14                 # Defaults to 0

tool_select_gcode: 
  _TOOL_PICKUP_START T={myself.name}
  _TOOL_PICKUP_END T={myself.name}
  SET_INPUT_SHAPER SHAPER_FREQ_X=48.4 SHAPER_FREQ_Y=114.6 SHAPER_TYPE_X=MZV SHAPER_TYPE_Y=2hump_ei
  SET_PRESSURE_ADVANCE ADVANCE=0.06

[ktc_tool 10]
tool_number: 10
toolchanger: Jubilee
heater: extruder2
fans: partfan_t10
params_zone: 555
params_park:598,5,0
# init_offset: 12.986,3.215,4.01 #3.255
params_meltzonelength: 14
# heater_active_to_standby_delay: 0.1
tool_select_gcode: 
  _TOOL_PICKUP_START T={myself.name}
  _TOOL_PICKUP_END T={myself.name}
  SET_INPUT_SHAPER SHAPER_FREQ_X=48.4 SHAPER_FREQ_Y=114.6 SHAPER_TYPE_X=MZV SHAPER_TYPE_Y=2hump_ei
#  SET_PRESSURE_ADVANCE ADVANCE=0.0775 SMOOTH_TIME=0.03
  SET_PRESSURE_ADVANCE ADVANCE=0.055 SMOOTH_TIME=0.03
  RESPOND PREFIX="info" COLOR="secondary" MSG="Filament Runout sensor for T10 enabled"
  SET_FILAMENT_SENSOR SENSOR=t10_runout ENABLE=1
tool_deselect_gcode:
  _TOOL_DROPOFF_START T={myself.name}
  _TOOL_DROPOFF_END T={myself.name}

[ktc_tool 11]
tool_number: 11
toolchanger: Jubilee
heater: extruder3:-100, extruder2
fans: partfan_t11
params_zone: 555
params_park:598,280,0
# init_offset: 12.611,5.194,3.95 #3.258
params_meltzonelength: 14
# heater_active_to_standby_delay: 0.1
tool_select_gcode: 
  _TOOL_PICKUP_START T={myself.name}
  _TOOL_PICKUP_END T={myself.name}
  SET_INPUT_SHAPER SHAPER_FREQ_X=48.4 SHAPER_FREQ_Y=114.6 SHAPER_TYPE_X=MZV SHAPER_TYPE_Y=2hump_ei
  SET_PRESSURE_ADVANCE ADVANCE=0.0775
tool_deselect_gcode:
  _TOOL_DROPOFF_START T={myself.name}
  _TOOL_DROPOFF_END T={myself.name}

[ktc_tool 49]
tool_number: 49
params_zone: 560
params_park:598,515,0
# init_offset: 0,0,0
tool_select_gcode: 
  _TOOL_PICKUP_START T={myself.name}
  _TOOL_PICKUP_END T={myself.name}
  SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0 SHAPER_TYPE_X=MZV SHAPER_TYPE_Y=MZV
  SET_PRESSURE_ADVANCE ADVANCE=0
tool_deselect_gcode:
  _TOOL_DROPOFF_START T={myself.name}
  _TOOL_DROPOFF_END T={myself.name}

[gcode_macro _TOOL_PICKUP_START]
description: Internal subroutine. Do not use!
# Tnnn: Tool to pickup
gcode:
  {%set myself = printer['ktc_tool '~params.T]%}

  M568 P{myself.name} A2                                               # Put tool heater in Active mode

  # Disable any filament runout sensors.
  _DISABLE_ALL_RUNOUT_SENSORS
  
  SAVE_ACCELERATION                                                    # Save current acceleration value.
  M204 S8000                                                           # Set high acceleration for toolchanging

  SAVE_GCODE_STATE NAME=TOOL_PICKUP_T{myself.name}                     # Save GCODE state. Will be restored at the end of _TOOL_PICKUP_END
  SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=maxx VALUE=0         # Don't use the X-max endstop as EmergencyStop.
  G90

  ##############  Move in to zone  ##############
  {% if printer.toolhead.position.x < 500 %}                           # If Printer inside safezone:
    RESPOND MSG="Moving to X500 Y{myself.params_park[1]}"
    G0 X500 Y{myself.params_park[1]} F40000                                     # Fast move XY inside the safezone.
  {% else %}                                                           # Else, outside of safezone:
    RESPOND MSG="Moving to X500"
    G0 X500 F40000                                                       # Fast move X inside the safezone, so we don't crash into other tools.
    RESPOND MSG="Moving to Y{myself.params_park[1]}"
    G0 Y{myself.params_park[1]} F40000                                          # Fast move Y in front of parking spot.
  {% endif %}                                                          # /

  ##############  Move in to parking spot  ##############
  G0 X{myself.params_park[0]|float - 15}  F40000                                # Fast Move near the pickup position for tool.
  G0 X{myself.params_park[0]} F3000                                           # Slow Move to the pickup position for tool.

  ##############  Lock Tool  ##############
  M400                                                                 # Wait for all moves to finish.
  KTC_TOOLCHANGER_ENGAGE TOOLCHANGER={myself.toolchanger}              # Lock the tool.
  SET_GCODE_OFFSET Z={myself.offset[2]} MOVE=1                         # Set and move the Z offset. Avoid crashing into bed when moving out later.

  ##############  Wait for heater  ##############
  {% if myself.heater_names|length > 0 %}                             # If the tool has an extruder:
    ACTIVATE_EXTRUDER EXTRUDER={myself.heater_names[0]}                # Activate the extruder
    M116 P{myself.number} W2                                           # Wait for tool to reach target temperature with a tolerance of 2*C
  {% endif %}                                                          # /

  ##############  Move out to zone  ##############
  G0 X{myself.params_zone} F6000                                           # Slow Move to the zone position for tool.

[gcode_macro _TOOL_PICKUP_END]
description: Internal subroutine. Do not use!
# Tnnn: Tool to pickup
gcode:
  {%set myself = printer['ktc_tool '~params.T]%}
  {%set ktc = printer['ktc']%}
  
    ##############  Move out to Safe position  ##############
  G0 X500 F40000                                                       # Fast Move to the safe position for tools.

    ##############  Check Tool Lock  ##############
  # QUERY_ENDSTOPS                                                       # Check the endstops and save the state to be retrieved in the macro below.
  QUERY_ENDSTOP_CONTINUESLY ENDSTOP='manual_stepper tool_lock' ATEMPTS=3
  _TOOL_LOCK_CHECK                                                      # MAcro to check so the tool is mounted by slightly advancing the lock again until hit endstop, only if endstop not already hit. Do not wait for it to finish.

    ##############  Finnish up  ##############
  M400                                                                 # Wait for current moves to finish.
  SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=maxx VALUE=1         # Use the X max as EmergencyStop.
  RESTORE_GCODE_STATE NAME=TOOL_PICKUP_T{myself.name} MOVE=0           # Restore GCODE state. Was saved at the begining of _TOOL_PICKUP_START. No move.
                                                                       # Set the toolhead offsets. Z is set and moved before any moves in _TOOL_PICKUP_START. Needs to be after any RESTORE_GCODE_STATE!
  SET_GCODE_OFFSET X={myself.offset[0]|float  + ktc.global_offset[0]|float } Y={myself.offset[1]|float  + ktc.global_offset[1]|float } Z={myself.offset[2]|float  + ktc.global_offset[2]|float } MOVE=0

    ##############  Return to saved position  ##############
  G1 F40000

  SAVE_GCODE_STATE NAME=TOOL_PICKUP2_T{myself.name}                    # Save state for priming nozzle

  ##############  Prime the filament, asume it was retracted as per e3d Revo documentation  ##############
  {% if  myself.heater_names|length > 0 %}                             # If the tool has an extruder:
                                                                  # If can extrude and global purge is active:
    {% if printer[myself.heater_names[0]].can_extrude|default("false")|lower == 'true' and printer.ktc.params_purge_on_toolchange %}
      M83                                                           # Relative extrusion
      G1 E{myself.params_meltzonelength|float - 2} F1300                     # DeRetract filament from meltzone
      G1 E2 F400                                                    # DeRetract filament from meltzone
    {% endif %}
  {% endif %}
  RESTORE_GCODE_STATE NAME=TOOL_PICKUP2_T{myself.name}                          # Restore state after priming nozzle
  G1 F30000
  RESTORE_ACCELERATION                                           # Restore saved acceleration value.
  KTC_TOOL_SET_STATE TOOL={myself.name} STATE=SELECTED       # Set the tool state to selected


[gcode_macro _TOOL_DROPOFF_START]
description: Internal subroutine. Do not use!
# Tnnn: Tool to pickup
gcode:
  {%set myself = printer['ktc_tool '~params.T]%}

  # Disable any filament runout sensors.
  _DISABLE_ALL_RUNOUT_SENSORS
  
  SAVE_ACCELERATION                                            # Save current acceleration value.
  M204 S8000                                                   # Set high acceleration for toolchanging

  {% if myself.name != printer.ktc.active_tool %}
    { action_raise_error("_TOOL_DROPOFF_START: Wrong tool. Asked to dropoff T" ~ myself.name ~ " while current is T" ~ printer.ktc.active_tool  ~ ".") }
  {% endif %}

    ##############  Retract the filament as per e3d Revo documentation  ##############
  {% if  myself.heater_names|length > 0 %}                          # If the tool has an extruder:
    M568 P{myself.name} A1                                          # Put tool heater in standby
                                                                    # If can extrude and global purge is active:
    {% if printer[myself.heater_names[0]].can_extrude|default("false")|lower == 'true' and printer.ktc.params_purge_on_toolchange %}
      M83                                                           # Relative extrusion
      G1 E-4 F2700                                                  # retract filament from meltzone
      G1 E2 F800                                                    # Extrude slightly to form a tip
      G1 E-{myself.params_meltzonelength|float - 2} F800                     # Retract filament from meltzone
    {% endif %}
  {% endif %}

  SET_GCODE_OFFSET X=0 Y=0                                      # Set XY offset to 0 so we park the tool right.
  SAVE_GCODE_STATE NAME=TOOL_DROPOFF_002_T{myself.name}         # Save GCode state.
  G90                                                           # Absolute positions

  SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=maxx VALUE=0 # Don't use the X max as EmergencyStop.

  # Fast Move to the general pickup position for tools.
  {% if printer.toolhead.position.x|float < 500 %}
    G0 X500 Y{myself.params_park[1]} F40000  # Move near pickup and lift z so we don't crash the bed later.
  {% else %}
    G0 X500 F40000               # Move X and lift z so we don't crash the bed or into other tools.
    G0 Y{myself.params_park[1]} F40000            # Move Y after X and Z
  {% endif %}
  M400                                # Wait for current moves to finish

  G0 X{myself.params_zone} F40000              # Fast Move near the dropoff position for tool.
  G0 X{myself.params_park[0]} F3000               # Slow Move to the dropoff position for tool.


[gcode_macro _TOOL_DROPOFF_END]
description: Internal subroutine. Do not use!
# Tnnn: Tool to pickup
gcode:
  {%set myself = printer['ktc_tool '~params.T]%}

  M400                                # Wait for current moves to finish
  KTC_TOOLCHANGER_DISENGAGE TOOLCHANGER={myself.toolchanger}                   # Unlock the tool

  G0 X{myself.params_park[0]|float - 15} F6000     # Slow Move to the pickup position for tool.
  G0 X500 F40000                           # Fast Move to the general pickup position for tools.
  M400

  SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=maxx VALUE=1 # Use the X max as EmergencyStop.
  RESTORE_GCODE_STATE NAME=TOOL_DROPOFF_002_T{myself.name} MOVE=0   # Restore Gcode state
  RESTORE_ACCELERATION                # Restore saved acceleration value.
  SET_GCODE_OFFSET Z=0                # Set Z offset to 0 after too is parked.
  KTC_TOOL_SET_STATE TOOL={myself.name} STATE=READY       # Set the tool state to ready
