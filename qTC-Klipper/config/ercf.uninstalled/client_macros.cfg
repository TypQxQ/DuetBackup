#
# This is an example (but working) macro to park toolhead out of the way of print
# You can also use your existing
#
[gcode_macro _PARK]
description: Park toolhead safely away from print
gcode:
    {% set Z_HOP = params.Z_HOP|default(5)|float %}
    {% set x_park = printer.toolhead.axis_minimum.x|float + 10.0 %}
    {% set y_park = printer.toolhead.axis_minimum.y|float + 10.0 %}
#    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
#    {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}

    _PARK_Z Z_HOP={Z_HOP}
    G0 X{x_park} Y{y_park} F6000


[gcode_macro _PARK_Z]
description: Park Z toolhead safely away from print
gcode:
    {% set Z_HOP = params.Z_HOP|default(5)|float %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}

    {% if act_z < (max_z - Z_HOP) %}
        {% set z_safe = Z_HOP %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    G91
    G1 Z{z_safe} F900
    G90



#
# This is an example (but working) CANCEL_PRINT macro
# You can also use your existing, but it should follow this pattern
#
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
description: Cancel print
gcode:
    RESPOND MSG="Print is canceling"
    T_1
    _PARK Z_HOP=20
    TURN_OFF_HEATERS
    SDCARD_RESET_FILE
    CLEAR_PAUSE
    BASE_CANCEL_PRINT

#
# This is an example (but working) PAUSE macro
# You can also use your existing, but it should follow this pattern
#
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
description: Pause the print and park
gcode:
  {% if printer.pause_resume.is_paused %}
    RESPOND MSG="Print is already paused"
  {% else %}
    RESPOND MSG="Print is pausing"
    BASE_PAUSE
    G92 E0
    G1 E-1.0 F1500.0	; Retract a little to reduce ooze
    G90
    SAVE_GCODE_STATE NAME=PAUSE_my_state
    _PARK_Z Z_HOP=5
  {% endif %}

[gcode_macro PAUSE_NOHEAT]
description: Pause the print and park, first turning off all tool heaters
gcode:
  G10 P0 S0 R0 A0	; turn off heater on Tool0
  G10 P1 S0 R0 A0	; turn off extruder 1
  G10 P2 S0 R0 A0	; turn off extruder 2
  G10 P3 S0 R0 A0	; turn off extruder 3
  G10 P4 S0 R0 A0	; turn off extruder 4
  G10 P5 S0 R0 A0	; turn off extruder 5
  G10 P6 S0 R0 A0	; turn off extruder 6
  G10 P7 S0 R0 A0	; turn off extruder 7
  G10 P8 S0 R0 A0	; turn off extruder 8
  G10 P9 S0 R0 A0	; turn off extruder 9
  G10 P10 S0 R0 A0	; turn off extruder 10
  G10 P11 S0 R0 A0	; turn off extruder 11
  PAUSE

#
# This is an example (but working) RESUME macro
# You can also use your existing, but it should follow this pattern
#
[gcode_macro RESUME]
rename_existing: BASE_RESUME
description: Resume the print
gcode:
  {% if not printer.pause_resume.is_paused %}
    RESPOND MSG="Print is not paused, resume aborted"
  {% else %}
    #
    # Good place to add other things like purging or nozzle cleaning
    #
    RESPOND MSG="Print is resuming"
    SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=maxx VALUE=0         # Do not use the X max as EmergencyStop untill next toolchange

    RESTORE_GCODE_STATE NAME=PAUSE_my_state MOVE=0 #1 MOVE_SPEED=100    # Should not be needed to move because of the BASE_RESUME will move.


    {% set tc = printer.ktcc.tool_current|int %}                     # Get the current locked tool.
    {% if tc >= 0 %}                                                     # If the printer has a tool locked
      {% set myself = printer['ktcc_tool '~tc] %}
      G0 X500 Y{myself.zone[1]} F3000                                    # Move Y inside the safezone before restoring position, in case the restore position is moving the tool inside the parking zone, preventing it from crashing into other tools.
#      SET_GCODE_OFFSET X={myself.offset[0]} Y={myself.offset[1]} Z={myself.offset[2]} MOVE=0  # Set X and Y offsets, 
      # KTCC_SET_GCODE_OFFSET_FOR_CURRENT_TOOL

    {% endif %} 

    BASE_RESUME
    {% if tc >= 0 %}                                                     # If the printer has a tool locked
      KTCC_SET_GCODE_OFFSET_FOR_CURRENT_TOOL
    {% endif %} 
  {% endif %}

